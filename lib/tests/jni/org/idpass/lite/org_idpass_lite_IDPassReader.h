/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_idpass_lite_IDPassReader */

#ifndef _Included_org_idpass_lite_IDPassReader
#define _Included_org_idpass_lite_IDPassReader
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    idpass_init
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_idpass_lite_IDPassReader_idpass_1init
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    ioctl
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_ioctl
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    create_card_with_face
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_create_1card_1with_1face
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    verify_card_with_face
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_verify_1card_1with_1face
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    verify_card_with_face_template
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_verify_1card_1with_1face_1template
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    verify_card_with_pin
 * Signature: (JLjava/lang/String;[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_verify_1card_1with_1pin
  (JNIEnv *, jobject, jlong, jstring, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    encrypt_with_card
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_encrypt_1with_1card
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    decrypt_with_card
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_decrypt_1with_1card
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    sign_with_card
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_sign_1with_1card
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    verify_with_card
 * Signature: (J[B[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_idpass_lite_IDPassReader_verify_1with_1card
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    generate_qrcode_pixels
 * Signature: (J[B)Ljava/util/BitSet;
 */
JNIEXPORT jobject JNICALL Java_org_idpass_lite_IDPassReader_generate_1qrcode_1pixels
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    compute_face_128d
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_compute_1face_1128d
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    compute_face_64d
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_compute_1face_164d
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    generate_encryption_key
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_idpass_lite_IDPassReader_generate_1encryption_1key
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    generate_secret_signature_keypair
 * Signature: ([B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_idpass_lite_IDPassReader_generate_1secret_1signature_1keypair
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    card_decrypt
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_card_1decrypt
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    compare_face_template
 * Signature: ([B[B)F
 */
JNIEXPORT jfloat JNICALL Java_org_idpass_lite_IDPassReader_compare_1face_1template
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    generate_root_certificate
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_generate_1root_1certificate
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    generate_child_certificate
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_generate_1child_1certificate
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    add_revoked_key
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_org_idpass_lite_IDPassReader_add_1revoked_1key
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    add_certificates
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_idpass_lite_IDPassReader_add_1certificates
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    verify_card_certificate
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_org_idpass_lite_IDPassReader_verify_1card_1certificate
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    verify_card_signature
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_idpass_lite_IDPassReader_verify_1card_1signature
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    merge_CardDetails
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_idpass_lite_IDPassReader_merge_1CardDetails
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    setenviron
 * Signature: (Ljava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_org_idpass_lite_IDPassReader_setenviron
  (JNIEnv *, jclass, jstring, jstring, jboolean);

/*
 * Class:     org_idpass_lite_IDPassReader
 * Method:    getenviron
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_idpass_lite_IDPassReader_getenviron
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
